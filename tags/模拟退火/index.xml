<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>模拟退火 on 钛合金伞的隙间</title>
        <link>https://blog.tibrella.top/tags/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/</link>
        <description>Recent content in 模拟退火 on 钛合金伞的隙间</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 23 Feb 2023 14:11:18 +0000</lastBuildDate><atom:link href="https://blog.tibrella.top/tags/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>模拟退火</title>
        <link>https://blog.tibrella.top/post/2023-2-23-%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/</link>
        <pubDate>Thu, 23 Feb 2023 14:11:18 +0000</pubDate>
        
        <guid>https://blog.tibrella.top/post/2023-2-23-%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/63f76817f144a01007c05a60.jpg" alt="Featured image of post 模拟退火" /&gt;&lt;p&gt;模拟退火不是模拟题意，也不会让你退火（可能会让你上火），顾名思义，这个算法模拟的是“退火” 的过程。&lt;/p&gt;
&lt;h2 id=&#34;基本原理&#34;&gt;基本原理&lt;/h2&gt;
&lt;p&gt;退火即晶体冷却的过程，将一个物体加热到一定温度后使其逐渐降温。而在物理中，物体内能越高，其粒子随机运动就更剧烈，状态也就越不稳定。物体温度高时，状态最不稳定。使降温，粒子运动变慢，状态就趋于稳定。当降温速度过快，会导致粒子来不及排列成稳定的原有的结构，从而形成能量高不稳定的非晶体。相对的，如果降温速度足够慢，粒子会渐趋有序，直至内能减为最小，此时物体呈现为晶体。&lt;/p&gt;
&lt;p&gt;上面两段所说的“非晶体”可以看作“局部最优解”，而变回原有结构的晶体则可以看作“最优解”。&lt;/p&gt;
&lt;p&gt;大体来说，模拟退火就是随机跳解，接受更优的解，同时为了防止局部最优解的陷阱，概率性接受不优的解，后者相当于物理过程中粒子的随机跳动，它带来了晶体降温结果的随机性。而跳随机解的次数多少，则相当于降温的速度，降温的速度越慢，晶体回到原有结构的可能性更高，也就相当于跳解的次数越多，跑出最优解的可能性更高。&lt;/p&gt;
&lt;p&gt;先放一张图感性理解一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63f75151f144a01007973ad6.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;有一个比较有趣的比喻&lt;/p&gt;
&lt;p&gt;爬山算法：一个兔子从一个点往高爬，爬到了一个山顶，但是不知道这个山顶是不是珠穆朗玛峰&lt;br&gt;
模拟退火：一个兔子喝醉了乱跳，跳到了某个山顶也要继续跳到别的山坡，但是它逐渐清醒，向最高点跳去&lt;/p&gt;
&lt;p&gt;感性理解后我们详细讲解一下算法过程。&lt;/p&gt;
&lt;h2 id=&#34;算法过程&#34;&gt;算法过程&lt;/h2&gt;
&lt;p&gt;设定好“初始解”，“初始温度”与“下降速度”，每一次“降温”都得到一个新解，于是出现两种情况，即新解优于旧解或不优于旧解。优于旧解显然是要接受的，但是只接受优解可能只能找到局部最优，与爬山算法无异，因而我们对于一个不优的解还需要进一步处理。&lt;/p&gt;
&lt;p&gt;而这一步处理（可能是）模拟退火的精髓所在，是把这个随机化算法和热力学/统计力学等连接起来的部分，即接受这个不优解的概率。&lt;/p&gt;
&lt;p&gt;摘自维基百科&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;玻尔兹曼分布是状态能量与系统温度的概率分布函数，给出了粒子处于特定状态下的概率&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;公式即为&lt;/p&gt;
&lt;p&gt;$$
p_i = \frac{1}{Q} e^{\frac{-\epsilon_i}{kT}}
$$&lt;/p&gt;
&lt;p&gt;此处 $p_i$ 是状态 $i$ 的概率，$\epsilon_i$ 为状态 $i$ 的能量，$k$ 为 Boltzmann 常数，$T$ 为温度&lt;/p&gt;
&lt;p&gt;啊当然这个并不是我们接下来需要用到的准则，只是引入一个热力学常量，即 Boltzmann 常数。同时下面的准则很大程度基于上面的玻尔兹曼分布（可能是，我目测的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1953 年 Metropolis 提出了这样一个重要性采样的方法，即设从当前状态 $i$ 生成新状态 $j$，若新状态的内能小于状态 $i$ 的内能，即 $E_j&amp;lt;E_i$，则接受新状态 $j$ 作为新的当前状态；否则，以概率 $\exp(\frac{-(E_j-E_i)}{kT})$ 接受状态 $j$，其中 $k$ 为 Boltzmann 常数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的概率公式中 $\exp$ 即 $e$ 的指数函数，同时两个状态能量的差 $E_j - E_i$ 可以表示为 $\Delta E$，则可以写出一个（我）更容易理解的表达方式，即&lt;/p&gt;
&lt;p&gt;$$
p_j = e^\frac{-\Delta E}{kT}
$$&lt;/p&gt;
&lt;p&gt;总的来说，概率 $p_{new}$ 可以表示为&lt;/p&gt;
&lt;p&gt;$$
p_{new} =
\begin{cases}
1, &amp;amp; \text{if } \operatorname{E}(x_{new}) &amp;lt; \operatorname{E}(x_{old}) \\
e^\frac{-\Delta E}{kT} &amp;amp; \text{if } \operatorname{E}(x_{new}) \geqslant \operatorname{E}(x_{old})
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;概率处理完了，主要算法部分也基本上结束了，下面我们引入一道例题。&lt;/p&gt;
&lt;h2 id=&#34;例题&#34;&gt;例题&lt;/h2&gt;
&lt;p&gt;题面：&lt;/p&gt;
&lt;h3 id=&#34;jsoi2004-平衡点--吊打xxx&#34;&gt;[JSOI2004] 平衡点 / 吊打XXX&lt;/h3&gt;
&lt;h4 id=&#34;题目描述&#34;&gt;题目描述&lt;/h4&gt;
&lt;p&gt;如图，有 $n$ 个重物，每个重物系在一条足够长的绳子上。&lt;/p&gt;
&lt;p&gt;每条绳子自上而下穿过桌面上的洞，然后系在一起。图中 $x$ 处就是公共的绳结。假设绳子是完全弹性的（即不会造成能量损失），桌子足够高（重物不会垂到地上），且忽略所有的摩擦，求绳结 $x$ 最终平衡于何处。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：桌面上的洞都比绳结 $x$ 小得多，所以即使某个重物特别重，绳结 $x$ 也不可能穿过桌面上的洞掉下来，最多是卡在某个洞口处。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.luogu.com.cn/upload/pic/148.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;输入格式&#34;&gt;输入格式&lt;/h4&gt;
&lt;p&gt;文件的第一行为一个正整数 $n$（$1\le n\le 1000$），表示重物和洞的数目。&lt;/p&gt;
&lt;p&gt;接下来的 $n$ 行，每行是 $3$ 个整数 $x_i, y_i, w_i$，分别表示第 $i$ 个洞的坐标以及第 $i$ 个重物的重量。（$-10000\le x_i,y_i\le10000, 0&amp;lt;w_i\le1000$）&lt;/p&gt;
&lt;h4 id=&#34;输出格式&#34;&gt;输出格式&lt;/h4&gt;
&lt;p&gt;你的程序必须输出两个浮点数（保留小数点后三位），分别表示处于最终平衡状态时绳结 $x$ 的横坐标和纵坐标。两个数以一个空格隔开。&lt;/p&gt;
&lt;h4 id=&#34;样例-1&#34;&gt;样例 #1&lt;/h4&gt;
&lt;h5 id=&#34;样例输入-1&#34;&gt;样例输入 #1&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;3
0 0 1
0 2 1
1 1 1
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;样例输出-1&#34;&gt;样例输出 #1&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0.577 1.000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;del&gt;物理还没学势能所以题解先咕咕&lt;/del&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
